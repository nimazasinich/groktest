name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Cache Node.js dependencies to speed up builds
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # Step 3: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    # Step 4: Install dependencies
    - name: Install dependencies
      run: npm ci # Use 'npm ci' for a clean install to avoid dependency mismatches
      
    # Step 5: Build the project
    - name: Build project
      run: npm run build
      
    # Step 6: Create the executable
    - name: Create executable
      run: npm run make:portable
      
    # Step 7: Debug - Verify that the artifact exists
    - name: Verify artifact
      run: |
        echo "Listing contents of dist directory:"
        dir dist
        if not exist "dist\\SpeechToTextApp.exe" (
          echo "Error: dist\\SpeechToTextApp.exe does not exist!"
          exit 1
        )
    
    # Step 8: Upload the artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: speech-to-text-app
        path: dist/SpeechToTextApp.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Download the artifact
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: speech-to-text-app
        
    # Step 3: Debug - Verify that the artifact was downloaded
    - name: Verify downloaded artifact
      run: |
        echo "Checking for downloaded file:"
        if [ ! -f "SpeechToTextApp.exe" ]; then
          echo "Error: SpeechToTextApp.exe not found!"
          exit 1
        fi
        
    # Step 4: Create the release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: SpeechToTextApp.exe

    # Step 5: Post-cleanup (optional)
    - name: Cleanup
      run: rm -rf dist
